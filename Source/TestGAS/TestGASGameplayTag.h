#pragma once

#include "NativeGameplayTags.h"

namespace TestGASGameplayTags {

	TESTGAS_API FGameplayTag FindTagByString(const FString& TagString, bool bMatchPartialString = false);

	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Ability_Behavior_SurvivesDeath);

	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Move);
	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Jump);
	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Look_Mouse);
	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Look_Stick);
	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Look_Crouch);
	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Look_AutoRun);

	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Melee);
	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_AirAttack);
	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Key_1);
	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Key_2);
	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Key_3);
	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Key_4);

	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameplayEvent_Death);
	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameplayEvent_Reset);
	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameplayEvent_RequestReset);

	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(SetByCaller_Damage);
	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(SetByCaller_Heal);

	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Status_Crouching);
	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Status_AutoRunning);
	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Status_Death);
	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Status_Death_Dying);
	TESTGAS_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Status_Death_Dead);



}